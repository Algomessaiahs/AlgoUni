@model AlgoUni.Models.ExamNotification

@{
    ViewBag.Title = "ExamNotifyCreate";
    Layout = "~/Views/Shared/_LoginRegisterLayout.cshtml";
}

<h2>ExamNotifyCreate</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ExamNotification</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ExamCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Degree, new List<SelectListItem>
            {
                    new SelectListItem() {Text = "B.E.", Value="B.E."},
                    new SelectListItem() {Text = "B.TECH.", Value="B.TECH."}


            }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Semester, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Semester, new List<SelectListItem>
             {
                     new SelectListItem() {Text = "I", Value="I"},
                     new SelectListItem() {Text = "II", Value="II"},
                     new SelectListItem() {Text = "III", Value="III"},
                     new SelectListItem() {Text = "IV", Value="IV"},
                     new SelectListItem() {Text = "V", Value="V"},
                     new SelectListItem() {Text = "VI", Value="VI"},
                     new SelectListItem() {Text = "VII", Value="VII"},
                     new SelectListItem() {Text = "VIII", Value="VIII"}

             }, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Semester, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ExamFees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ExamFees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ExamFees, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherFees, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherFees, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.OtherFees, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.UnivCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UnivCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UnivCode, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "ExamNotifyIndex")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
